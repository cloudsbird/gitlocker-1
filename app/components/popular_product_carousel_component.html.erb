<!-- app/views/popular_product_carousel_component.html.erb -->
<style type="text/css">
  .popular-carousel {
    position: relative;
    max-width: 560%; /* Adjust this value as needed */
    margin: 0 auto; /* Center the carousel */
    overflow: hidden; /* Hide overflow */
  }

  .carousel-inner1 {
    display: flex;
    gap: 28px; /* Space between items */
    flex-wrap: nowrap; /* Ensure items do not wrap to the next line */
    width: max-content; /* Make sure the inner container expands to fit all items */
    overflow-x: auto; /* Enable horizontal scrolling if needed */
    scroll-behavior: smooth; /* Smooth scrolling */
    
    /* Hide scrollbar */
    -ms-overflow-style: none; /* Hides the scrollbar in Internet Explorer and Edge */
    scrollbar-width: none; /* Hides the scrollbar in Firefox */
  }

  .carousel-inner1::-webkit-scrollbar {
    display: none; /* Hides the scrollbar in WebKit browsers */
  }

  .carousel-page1 {
    flex-shrink: 0;
    flex-grow: 0;
    width: calc(16%); /* Adjust this if you need different item widths */
    max-width: calc(16%); /* Adjust this if you need different item widths */
  }

  .carousel-control {
    background-color: rgba(255, 255, 255, 0.2); /* Adjust based on theme */
    border-radius: 50%;
    transition: background-color 0.3s;
  }

  .carousel-control:hover {
    background-color: rgba(255, 255, 255, 0.5); /* Adjust based on theme */
  }

  /* Hide the previous button */
  .carousel-control.prev {
    display: none; /* Hides the button */
  }

  /* Adjust the right arrow button's position */
  .carousel-control.next {
    right: -10px; /* Adjust this value to move the button further to the right */
  }
</style>

<div class="popular-carousel relative overflow-hidden">
  <div class="carousel-inner1 flex gap-6">
    <% @popular_products.each_with_index do |product, index| %>
      <div class="carousel-page1 flex-shrink-0 flex-grow-0" style="flex-basis: calc(10%); max-width: calc(10%);" data-page="<%= index + 1 %>">
        <%= render partial: 'home/product', locals: { product: product } %>
      </div>
    <% end %>
  </div>

  <% if @popular_products.length > 5 %>
    <!-- Slider controls -->
    <button type="button" class="carousel-control prev absolute top-1/2 left-0 transform -translate-y-1/2 z-30 flex items-center justify-center h-10 w-10 cursor-pointer group focus:outline-none" data-action="click->carousel#prevSlide" data-carousel-prev1>
      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-white/20 dark:bg-gray-400/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
        <svg class="w-4 h-4 text-white dark:text-gray-400 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
        </svg>
        <span class="sr-only">Previous</span>
      </span>
    </button>
    <button type="button" class="carousel-control next absolute top-1/2 right-10 transform -translate-y-1/2 z-30 flex items-center justify-center h-10 w-10 cursor-pointer group focus:outline-none" data-action="click->carousel#nextSlide" data-carousel-next1>
      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-white/30 dark:bg-gray-400/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
        <svg class="w-4 h-4 text-white dark:text-gray-400 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
        </svg>
        <span class="sr-only">Next</span>
      </span>
    </button>
  <% end %>
</div>

<script type="text/javascript">
document.addEventListener('turbo:load', () => {
  const prevButton = document.querySelector('[data-carousel-prev1]');
  const nextButton = document.querySelector('[data-carousel-next1]');
  const carouselInner = document.querySelector('.carousel-inner1');
  const carouselPages = document.querySelectorAll('.carousel-page1');
  const itemsPerPage = 5; // Show 5 items per page
  let currentIndex = 0;

  const updateControlsVisibility = () => {
    prevButton.style.display = currentIndex === 0 ? 'none' : 'block';
    nextButton.style.display = (currentIndex + itemsPerPage) >= carouselPages.length ? 'none' : 'block';
  };

  const scrollToIndex = (index) => {
    const targetPage = carouselPages[index];
    if (targetPage) {
      carouselInner.scrollTo({
        left: targetPage.offsetLeft,
        behavior: 'smooth',
      });
      currentIndex = index;
      updateControlsVisibility();
    }
  };

  const handleScroll = (direction) => {
    let newIndex = currentIndex + direction; // Scroll by one product at a time

    // Ensure the new index is within bounds
    if (newIndex < 0) {
      newIndex = 0;
    } else if (newIndex >= carouselPages.length) {
      newIndex = carouselPages.length - 1; // Ensure we don't go beyond the last product
    }

    scrollToIndex(newIndex);
  };

  prevButton.addEventListener('click', () => handleScroll(-1)); // Scroll left by one
  nextButton.addEventListener('click', () => handleScroll(1)); // Scroll right by one

  // Initialize control visibility on page load
  updateControlsVisibility();
});

</script>
