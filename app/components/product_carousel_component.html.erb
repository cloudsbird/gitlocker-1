<style type="text/css">
.product-carousel {
    position: relative;
    max-width: 570%; /* Adjust this value as needed */
    margin: 0 auto; /* Center the carousel */
    overflow: hidden; /* Hide overflow */
  }

.carousel-inner {
    display: flex;
    gap: 28px; /* Space between items */
    flex-wrap: nowrap; /* Ensure items do not wrap to the next line */
    width: max-content; /* Make sure the inner container expands to fit all items */
    overflow-x: hidden; /* Enable horizontal scrolling if needed */
    scroll-behavior: smooth; /* Smooth scrolling */
    
    /* Hide scrollbar */
    -ms-overflow-style: none; /* Hides the scrollbar in Internet Explorer and Edge */
    scrollbar-width: none; /* Hides the scrollbar in Firefox */
  }

.carousel-inner::-webkit-scrollbar {
    display: none; /* Hides the scrollbar in WebKit browsers */
  }

.carousel-page {
    flex-shrink: 0;
    flex-grow: 0;
    width: calc(100% / 5 - 28px); /* Adjust this if you need different item widths */
  }

.carousel-control {
    background-color: rgba(255, 255, 255, 0.2); /* Adjust based on theme */
    border-radius: 50%;
    transition: background-color 0.3s;
  }

.carousel-control:hover {
    background-color: rgba(255, 255, 255, 0.5); /* Adjust based on theme */
  }

.carousel-control.prev {
    left: 10px; /* Position the previous button */
  }

.carousel-control.next {
    right: -4px; /* Adjust this value to move the button further to the right */
  }


</style>

<div class="w-full">
  <div class="slickSlider">
    <% @recent_products.each_with_index do |product, index| %>
      <div class="" style="width: 280px; margin-right: 28px" data-page="<%= index + 1 %>">
        <%= render partial: 'home/product', locals: { product: product } %>
      </div>
    <% end %>
  </div>

</div>

<script type="text/javascript">

 document.addEventListener('turbo:load', () => {
  const prevButton = document.querySelector('[data-carousel-prev]');
  const nextButton = document.querySelector('[data-carousel-next]');
  const carouselInner = document.querySelector('.carousel-inner');
  const carouselPages = Array.from(document.querySelectorAll('.carousel-page'));
  const itemsPerPage = 1; // Number of items to scroll at a time

  let currentIndex = 0;

  const updateControlsVisibility = () => {
    prevButton.style.display = currentIndex === 0 ? 'none' : 'block';

    nextButton.style.display = currentIndex >= carouselPages.length - 1 ? 'none' : 'block';
  };

  const scrollToIndex = (index) => {
    if (index < 0 || index >= carouselPages.length) return;

    const targetPage = carouselPages[index];
    if (targetPage) {
      carouselInner.scrollTo({
        left: targetPage.offsetLeft,
        behavior: 'smooth',
      });
      currentIndex = index;
      updateControlsVisibility();
    }
  };

  const handleScroll = (direction) => {

    let newIndex = currentIndex + direction;

    // Ensure the new index is within bounds
    newIndex = Math.max(0, Math.min(newIndex, carouselPages.length - 1));
    scrollToIndex(newIndex);
  };

  // Attach click handlers to buttons
  prevButton.addEventListener('click', () => handleScroll(-itemsPerPage)); // Scroll left
  nextButton.addEventListener('click', () => handleScroll(itemsPerPage)); // Scroll right


  // Initialize control visibility on page load
  updateControlsVisibility();
});


</script>
